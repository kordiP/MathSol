Program.cs
////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\
static void Main()
        {
            int stage = 1;
            Console.CursorVisible = false;
            Console.WriteLine("Hello! This is MathSol by kordiP. I can solve many types of math problems and now I will try to solve yours. So, what is the type of your problem?");
            Console.WriteLine("(Type H for help, C to clear text)");
            Console.CursorVisible = true;
            string inputType = Console.ReadLine();
            int type = 0; 
            bool succType = false;
            WorkCode.TypeFinder(inputType, stage, type, succType);
            stage++;
            Console.Clear();
            Console.WriteLine("So, in which subcategory of {} is your problem?");
            string inputSubcategory = Console.ReadLine();
            int subcategory = 0;
            bool succCategory = false;
            WorkCode.TypeFinder(inputSubcategory, stage, subcategory, succCategory);

        }
////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\




WorkCode.cs
////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\
public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }
public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }
public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }
public static string[] allTypes = { "Algebra", "Geometry", "Calculus", "Statistics" };
        public static int Checks(string input, int stage)   // 1 --> Algebra & Arithmetic; 2 --> Geometry; 3 --> Calculus; 4 --> Probability & Statistics **** THERE ARE PROBABLY MORE *****
        {
            int returnThat = 0;
            if (stage == 1)
            {
                for (int i = 0; i < allTypes.Length; i++)
                    if (allTypes[i] == input)
                        returnThat = i;
            }
            else if (stage == 2)
            {

            }
            return returnThat;
        }
        public static void Helper(int stageNumber, int type) 
        {
            if (stageNumber == 1)
            {
                Console.WriteLine("All types of math problems:");
                for (int i = 0; i < allTypes.Length; i++) Console.WriteLine(allTypes[i]);
            }
            else if (stageNumber == 2)
            {
                Console.WriteLine();
            }
        }
        public static void TypeFinder(string input, int stage, int type, bool succ)
        {
            if (stage == 1)
            {

                while (succ == false)
                {
                    if (WorkCode.Checks(input, stage) != 0)
                    {
                        type = WorkCode.Checks(input, stage);
                        succ = true;
                    }
                    else
                    {
                        switch (input)
                        {
                            case "H":
                                WorkCode.Helper(stage, type);
                                break;
                            case "C":
                                Console.Clear();
                                break;
                            default:
                                Console.WriteLine("Hmm... I couldn't find that.");
                                WorkCode.Helper(stage, type);
                                Console.WriteLine("Try with one of these!");
                                break;
                        }
                        input = Console.ReadLine();
                    }
                }
            }
            else if (stage == 2)
            {

            }
        }
        public static void ReturningType()
        {

        }
////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\////\\\\